save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
#####################################################
####Improvements?
###########################
#### Description: turns SIFT keypoints and descriptors from many images into a single matrix where nrows=number of images, ncols = length of 10 random sequentially concatentated 128-dim keypoint descriptors (for each image.)
##
#### Inputs:
# "img_dir" =
# "set_name" = default = ""
# "data_name" =       default ="pets"
# "export" =     default = TRUE
# "nfeatures" = number of random keypoint descriptors to use image.
# default = 10
#### Outputs:
# "dat" = an .RData file of SIFT features for all images in input directory.
# nrow = number of images in input directory. ncol = *****???
#img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
feature_SIFT_random <- function(img_dir, set_name = "", data_name = "pets", export=T, nfeatures = 10) {
n_files <- length(list.files(img_dir))
dat <- list()
subset <- list()
for (i in 1:n_files) {
# loads two data objects, one of which, features, has nrows = number of
# image keypoints
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
# choose nfeatures=10 random rows from the features matrix
for(n in seq_along(sample(nrow(features), nfeatures))) {
# assign a random row of keypoint descriptors to list "subset"
subset[[n]] <- features[sample(nrow(features), nfeatures)[[n]],]
}
#turn my list of vectors into a matrix with each vector as a row
subset <- t(simplify2array(subset))
# turn matrix "subset" into a single vector made up of the sequentially
# concatonated rows of "subset". assign the new vector to the
#ith element of "dat" list
dat[[i]] <- as.vector(t(subset))
}
# combined the "dat" list elements into rows of a single matrix.
#dat <- do.call(rbind, dat)
dat <- t(simplify2array(dat))
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
#####################################################
####Improvements?
###########################
feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
?matrix
subset <- matrix(NA, nrow = nrow(features))
subset[1,] <- features[sample(nrow(features), 10)[[2]],]
subset <- matrix(NA, nrow = nrow(features), ncol = 128)
subset[1,] <- features[sample(nrow(features), 10)[[2]],]
head.matrix(subset)
subset[4,] <- features[sample(nrow(features), 10)[[2]],]
head.matrix(subset)
#### Description: turns SIFT keypoints and descriptors from many images into a single matrix where nrows=number of images, ncols = length of 10 random sequentially concatentated 128-dim keypoint descriptors (for each image.)
##
#### Inputs:
# "img_dir" = must end in a "/"*********
# "set_name" = default = ""
# "data_name" =       default ="pets"
# "export" =     default = TRUE
# "nfeatures" = number of random keypoint descriptors to use image.
# default = 10
#### Outputs:
# "dat" = an .RData file of SIFT features for all images in input directory.
# nrow = number of images in input directory. ncol = *****???
#img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
feature_SIFT_random <- function(img_dir, set_name = "", data_name = "pets", export=T, nfeatures = 10) {
n_files <- length(list.files(img_dir))
dat <- list()
#subset <- list()
for (i in 1:n_files) {
# loads two data objects, one of which, features, has nrows = number of
# image keypoints
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#create matrix
subset <- matrix(NA, nrow = nrow(features), ncol = 128)
# choose nfeatures=10 random rows from the features matrix
for(n in seq_along(sample(nrow(features), nfeatures))) {
# assign a random row of keypoint descriptors to list "subset"
subset[n,] <- features[sample(nrow(features), nfeatures)[[n]],]
}
#turn my list of vectors into a matrix with each vector as a row
#subset <- t(simplify2array(subset))
# turn matrix "subset" into a single vector made up of the sequentially
# concatonated rows of "subset". assign the new vector to the
#ith element of "dat" list
dat[[i]] <- as.vector(t(subset))
}
# combined the "dat" list elements into rows of a single matrix.
#dat <- do.call(rbind, dat)
dat <- t(simplify2array(dat))
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
#####################################################
####Improvements?
###########################
feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
dim(dat)
test <- feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
dim(test)
head(test)
#### Description: turns SIFT keypoints and descriptors from many images into a single matrix where nrows=number of images, ncols = length of 10 random sequentially concatentated 128-dim keypoint descriptors (for each image.)
##
#### Inputs:
# "img_dir" = must end in a "/"*********
# "set_name" = default = ""
# "data_name" =       default ="pets"
# "export" =     default = TRUE
# "nfeatures" = number of random keypoint descriptors to use image.
# default = 10
#### Outputs:
# "dat" = an .RData file of SIFT features for all images in input directory.
# nrow = number of images in input directory. ncol = *****???
#img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
feature_SIFT_random <- function(img_dir, set_name = "", data_name = "pets", export=T, nfeatures = 10) {
n_files <- length(list.files(img_dir))
dat <- matrix(NA, nrow = length(n_files), ncol = 128*nfeatures)
#subset <- list()
for (i in 1:n_files) {
# loads two data objects, one of which, features, has nrows = number of
# image keypoints
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#create matrix
subset <- matrix(NA, nrow = nrow(features), ncol = 128)
# choose nfeatures=10 random rows from the features matrix
for(n in seq_along(sample(nrow(features), nfeatures))) {
# assign a random row of keypoint descriptors to list "subset"
subset[n,] <- features[sample(nrow(features), nfeatures)[[n]],]
}
#turn my list of vectors into a matrix with each vector as a row
#subset <- t(simplify2array(subset))
# turn matrix "subset" into a single vector made up of the sequentially
# concatonated rows of "subset". assign the new vector to the
#ith element of "dat" list
dat[i,] <- as.vector(t(subset))
}
# combined the "dat" list elements into rows of a single matrix.
#dat <- do.call(rbind, dat)
#dat <- t(simplify2array(dat))
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
#####################################################
####Improvements?
###########################
test <- feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
test <- matrix(c(rep(1,3),rep(2,3),rep(3,3), rep(4,3), rep(5,3)), ncol=3, byrow = TRUE)
test
test[sample(nrow(test), 2)[[2]],]
test2 <- matrix(NA, nrow = 5, ncol = 3)
test2[3,] <- test[sample(nrow(test), 2)[[3]],]
test[sample(nrow(test), 2)[[2]],]
test[sample(nrow(test), 2)[[2]],]
test2
test2[3,]
test2[3,] <- test[sample(nrow(test), 2)[[2]],]
test2
feature_SIFT_random <- function(img_dir, set_name = "", data_name = "pets", export=T, nfeatures = 10) {
n_files <- length(list.files(img_dir))
dat <- matrix(NA, nrow = length(n_files), ncol = 128*nfeatures)
#subset <- list()
for (i in 1:n_files) {
# loads two data objects, one of which, features, has nrows = number of
# image keypoints
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#create matrix
subset <- matrix(NA, nrow = nrow(features), ncol = 128)
# choose nfeatures=10 random rows from the features matrix
for(n in seq_along(sample(nrow(features), nfeatures))) {
# assign a random row of keypoint descriptors to list "subset"
subset[n,] <- features[sample(nrow(features), nfeatures)[[n]],]
}
#turn my list of vectors into a matrix with each vector as a row
#subset <- t(simplify2array(subset))
# turn matrix "subset" into a single vector made up of the sequentially
# concatonated rows of "subset". assign the new vector to the
#ith element of "dat" list
dat[i,] <- as.vector(t(subset))
}
# combined the "dat" list elements into rows of a single matrix.
#dat <- do.call(rbind, dat)
#dat <- t(simplify2array(dat))
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
';'
';'
fa/s
dFa
sdf
test <- feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
#### Description: turns SIFT keypoints and descriptors from many images into a single matrix where nrows=number of images, ncols = length of 10 random sequentially concatentated 128-dim keypoint descriptors (for each image.)
##
#### Inputs:
# "img_dir" = must end in a "/"*********
# "set_name" = default = ""
# "data_name" =       default ="pets"
# "export" =     default = TRUE
# "nfeatures" = number of random keypoint descriptors to use image.
# default = 10
#### Outputs:
# "dat" = an .RData file of SIFT features for all images in input directory.
# nrow = number of images in input directory. ncol = *****???
#img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
feature_SIFT_random <- function(img_dir, set_name = "", data_name = "pets", export=T, nfeatures = 10) {
n_files <- length(list.files(img_dir))
dat <- matrix(NA, nrow = length(n_files), ncol = 128*nfeatures)
#subset <- list()
for (i in 1:n_files) {
# loads two data objects, one of which, features, has nrows = number of
# image keypoints
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#create matrix
subset <- matrix(NA, nrow = nrow(features), ncol = 128)
# choose nfeatures=10 random rows from the features matrix
for(n in seq_along(sample(nrow(features), nfeatures))) {
# assign a random row of keypoint descriptors to list "subset"
subset[n,] <- features[sample(nrow(features), nfeatures)[[n]],]
}
#turn my list of vectors into a matrix with each vector as a row
#subset <- t(simplify2array(subset))
# turn matrix "subset" into a single vector made up of the sequentially
# concatonated rows of "subset". assign the new vector to the
#ith element of "dat" list
subset <- as.vector(t(subset))
dat[i,] <- subset
}
# combined the "dat" list elements into rows of a single matrix.
#dat <- do.call(rbind, dat)
#dat <- t(simplify2array(dat))
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
test <- feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
#### Description: turns SIFT keypoints and descriptors from many images into a single matrix where nrows=number of images, ncols = length of 10 random sequentially concatentated 128-dim keypoint descriptors (for each image.)
##
#### Inputs:
# "img_dir" = must end in a "/"*********
# "set_name" = default = ""
# "data_name" =       default ="pets"
# "export" =     default = TRUE
# "nfeatures" = number of random keypoint descriptors to use image.
# default = 10
#### Outputs:
# "dat" = an .RData file of SIFT features for all images in input directory.
# nrow = number of images in input directory. ncol = *****???
#img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
feature_SIFT_random <- function(img_dir, set_name = "", data_name = "pets", export=T, nfeatures = 10) {
n_files <- length(list.files(img_dir))
#dat <- matrix(NA, nrow = length(n_files), ncol = 128*nfeatures)
dat <- list()
for (i in 1:n_files) {
# loads two data objects, one of which, features, has nrows = number of
# image keypoints
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#create matrix
subset <- matrix(NA, nrow = nrow(features), ncol = 128)
# choose nfeatures=10 random rows from the features matrix
for(n in seq_along(sample(nrow(features), nfeatures))) {
# assign a random row of keypoint descriptors to list "subset"
subset[n,] <- features[sample(nrow(features), nfeatures)[[n]],]
}
#turn my list of vectors into a matrix with each vector as a row
#subset <- t(simplify2array(subset))
# turn matrix "subset" into a single vector made up of the sequentially
# concatonated rows of "subset". assign the new vector to the
#ith element of "dat" list
subset <- as.vector(t(subset))
dat[[i]] <- subset
}
# combined the "dat" list elements into rows of a single matrix.
#dat <- do.call(rbind, dat)
dat <- t(simplify2array(dat))
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
test <- feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
dim(test)
#### Description: turns SIFT keypoints and descriptors from many images into a single matrix where nrows=number of images, ncols = length of 10 random sequentially concatentated 128-dim keypoint descriptors (for each image.)
##
#### Inputs:
# "img_dir" = must end in a "/"*********
# "set_name" = default = ""
# "data_name" =       default ="pets"
# "export" =     default = TRUE
# "nfeatures" = number of random keypoint descriptors to use image.
# default = 10
#### Outputs:
# "dat" = an .RData file of SIFT features for all images in input directory.
# nrow = number of images in input directory. ncol = *****???
#img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
feature_SIFT_random <- function(img_dir, set_name = "", data_name = "pets", export=T, nfeatures = 10) {
n_files <- length(list.files(img_dir))
#dat <- matrix(NA, nrow = length(n_files), ncol = 128*nfeatures)
dat <- list()
for (i in 1:n_files) {
# loads two data objects, one of which, features, has nrows = number of
# image keypoints
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#create matrix
subset <- matrix(NA, nrow = nrow(features), ncol = 128)
# choose nfeatures=10 random rows from the features matrix
for(n in seq_along(sample(nrow(features), nfeatures))) {
# assign a random row of keypoint descriptors to list "subset"
subset[n,] <- features[sample(nrow(features), nfeatures)[[n]],]
}
#turn my list of vectors into a matrix with each vector as a row
#subset <- t(simplify2array(subset))
# turn matrix "subset" into a single vector made up of the sequentially
# concatonated rows of "subset". assign the new vector to the
#ith element of "dat" list
subset <- as.vector(t(subset))
dat[[i]] <- subset
}
# combined the "dat" list elements into rows of a single matrix.
#dat <- do.call(rbind, dat)
#dat <- t(simplify2array(dat))
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
test <- feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
dim(test)
size(test)
str(test)
#### Description: turns SIFT keypoints and descriptors from many images into a single matrix where nrows=number of images, ncols = length of 10 random sequentially concatentated 128-dim keypoint descriptors (for each image.)
##
#### Inputs:
# "img_dir" = must end in a "/"*********
# "set_name" = default = ""
# "data_name" =       default ="pets"
# "export" =     default = TRUE
# "nfeatures" = number of random keypoint descriptors to use image.
# default = 10
#### Outputs:
# "dat" = an .RData file of SIFT features for all images in input directory.
# nrow = number of images in input directory. ncol = *****???
#img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
feature_SIFT_random <- function(img_dir, set_name = "", data_name = "pets", export=T, nfeatures = 10) {
n_files <- length(list.files(img_dir))
#dat <- matrix(NA, nrow = length(n_files), ncol = 128*nfeatures)
dat <- list()
for (i in 1:n_files) {
# loads two data objects, one of which, features, has nrows = number of
# image keypoints
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#create matrix
subset <- matrix(NA, nrow = nrow(features), ncol = 128)
for(n in 1:nfeatures) {
# choose nfeatures=10 random rows (=keypoint descriptors) from the
#features matrix and assign them to list "subset"
subset[n,] <- features[sample(nrow(features), nfeatures)[[n]],]
}
#turn my list of vectors into a matrix with each vector as a row
#subset <- t(simplify2array(subset))
# turn matrix "subset" into a single vector made up of the sequentially
# concatonated rows of "subset". assign the new vector to the
#ith element of "dat" list
subset <- as.vector(t(subset))
dat[[i]] <- subset
}
# combined the "dat" list elements into rows of a single matrix.
#dat <- do.call(rbind, dat)
#dat <- t(simplify2array(dat))
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
(=keypoint descriptors)
test <- feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
class(test)
dim(test)
str(test)
#### Description: turns SIFT keypoints and descriptors from many images into a single matrix where nrows=number of images, ncols = length of 10 random sequentially concatentated 128-dim keypoint descriptors (for each image.)
##
#### Inputs:
# "img_dir" = must end in a "/"*********
# "set_name" = default = ""
# "data_name" =       default ="pets"
# "export" =     default = TRUE
# "nfeatures" = number of random keypoint descriptors to use image.
# default = 10
#### Outputs:
# "dat" = an .RData file of SIFT features for all images in input directory.
# nrow = number of images in input directory. ncol = *****???
#img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
feature_SIFT_random <- function(img_dir, set_name = "", data_name = "pets", export=T, nfeatures = 10) {
n_files <- length(list.files(img_dir))
#dat <- matrix(NA, nrow = length(n_files), ncol = 128*nfeatures)
dat <- list()
for (i in 1:n_files) {
# loads two data objects, one of which, features, has nrows = number of
# image keypoints
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#create matrix
subset <- matrix(NA, nrow = nfeatures, ncol = 128)
for(n in 1:nfeatures) {
# choose nfeatures=10 random rows (=keypoint descriptors) from the
#features matrix and assign them to list "subset"
subset[n,] <- features[sample(nrow(features), nfeatures)[[n]],]
}
#turn my list of vectors into a matrix with each vector as a row
#subset <- t(simplify2array(subset))
# turn matrix "subset" into a single vector made up of the sequentially
# concatonated rows of "subset". assign the new vector to the
#ith element of "dat" list
subset <- as.vector(t(subset))
dat[[i]] <- subset
}
# combined the "dat" list elements into rows of a single matrix.
#dat <- do.call(rbind, dat)
#dat <- t(simplify2array(dat))
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
test <- feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
class(test)
dim(test)
str(test)
#### Description: turns SIFT keypoints and descriptors from many images into a single matrix where nrows=number of images, ncols = length of 10 random sequentially concatentated 128-dim keypoint descriptors (for each image.)
##
#### Inputs:
# "img_dir" = must end in a "/"*********
# "set_name" = default = ""
# "data_name" =       default ="pets"
# "export" =     default = TRUE
# "nfeatures" = number of random keypoint descriptors to use image.
# default = 10
#### Outputs:
# "dat" = an .RData file of SIFT features for all images in input directory.
# nrow = number of images in input directory. ncol = *****???
#img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
feature_SIFT_random <- function(img_dir, set_name = "", data_name = "pets", export=T, nfeatures = 10) {
n_files <- length(list.files(img_dir))
#dat <- matrix(NA, nrow = length(n_files), ncol = 128*nfeatures)
dat <- list()
for (i in 1:n_files) {
# loads two data objects, one of which, features, has nrows = number of
# image keypoints
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#create matrix
subset <- matrix(NA, nrow = nfeatures, ncol = 128)
for(n in 1:nfeatures) {
# choose nfeatures=10 random rows (=keypoint descriptors) from the
#features matrix and assign them to list "subset"
subset[n,] <- features[sample(nrow(features), nfeatures)[[n]],]
}
#turn my list of vectors into a matrix with each vector as a row
#subset <- t(simplify2array(subset))
# turn matrix "subset" into a single vector made up of the sequentially
# concatonated rows of "subset". assign the new vector to the
#ith element of "dat" list
subset <- as.vector(t(subset))
dat[[i]] <- subset
}
# combined the "dat" list elements into rows of a single matrix.
#dat <- do.call(rbind, dat)
dat <- t(simplify2array(dat))
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
test <- feature_SIFT_random("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
class(test)
dim(test)
?head.matrix
head(test[,1:8])
