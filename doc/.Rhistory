setwd("~/Documents/GitHub/Spring2018/Project_Starter_Codes/doc")
?matrix
?set.seed
load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500","pet11.jpg.sift.Rdata"))
load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
View(keypoints)
View(features)
dim(features)
test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500","pet11.jpg.sift.Rdata"))
test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dim(test)
typeof(test)
str(test)
?list
features <- list(NA)
str(list)
test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
features11 <- features
bof <- kmeans(features11, 10)
str(bof)
bof
dim(bof$centers)
head(bof$centers)
typeof(bof$centers)
class(bof$centers)
test <- bof$centers
View(test)
test2 <- as.vector(t(test))
str(test2)
test2[127:129]
test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
str(test)
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
kmeans = 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- matrix(NA, nrow = n_files, ncol = kmeans*128)
for (i in 1:n_files) {
#defined object features; extracted the second element of the loaded data object
features <- load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))[[2]]
set.seed(1234)
bof <- kmeans(features, kmeans)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
dat[i] <- as.vector(t(bof$centers))
}
?kmeans
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k = 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- matrix(NA, nrow = n_files, ncol = kmeans*128)
for (i in 1:n_files) {
#defined object features; extracted the second element of the loaded data object
features <- load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))[[2]]
set.seed(1234)
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
dat[i] <- as.vector(t(bof$centers))
}
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k = 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- matrix(NA, nrow = n_files, ncol = kmeans*128)
for (i in 1:n_files) {
#defined object features; extracted the second element of the loaded data object
features <- load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))[[2]]
#set.seed(1234)
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
dat[i] <- as.vector(t(bof$centers))
}
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k = 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- matrix(NA, nrow = n_files, ncol = kmeans*128)
for (i in 1:n_files) {
#defined object features; extracted the second element of the loaded data object
features <- load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))[[2]]
#set.seed(1234)
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
dat[i] <- as.vector(t(bof$centers))
}
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k <- 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- matrix(NA, nrow = n_files, ncol = kmeans*128)
for (i in 1:n_files) {
#defined object features; extracted the second element of the loaded data object
features <- load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))[[2]]
#set.seed(1234)
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
dat[i] <- as.vector(t(bof$centers))
}
?sample.int
str(test2)
test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))[[2]]
str(test)
test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))[2]
str(test)
test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
str(test)
str(test)
test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
test <- c("k", "f")
View(features)
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k <- 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- matrix(NA, nrow = n_files, ncol = kmeans*128)
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k <- 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- matrix(NA, nrow = n_files, ncol = k*128)
for (i in 1:n_files) {
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#set.seed(1234)
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
dat[i] <- as.vector(t(bof$centers))
}
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k <- 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- list(NA)
for (i in 1:n_files) {
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#set.seed(1234)
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
# https://stackoverflow.com/questions/1329940/how-do-i-make-a-matrix-from-a-list-of-vectors-in-r
dat[[i] <- as.vector(t(bof$centers))
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k <- 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- list(NA)
for (i in 1:n_files) {
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#set.seed(1234)
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
# "https://stackoverflow.com/questions/1329940/how-do-i-make-a-matrix-from-a-list-of-vectors-in-r"
dat[[i] <- as.vector(t(bof$centers))
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k <- 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- list(NA)
for (i in 1:n_files) {
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#set.seed(1234)
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
######"https://stackoverflow.com/questions/1329940/how-do-i-make-a-matrix-from-a-list-of-vectors-in-r"
dat[[i] <- as.vector(t(bof$centers))
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k <- 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- list(NA)
for (i in 1:n_files) {
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#set.seed(1234)
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
dat[[i] <- as.vector(t(bof$centers))
?list
test <- list("Bob")
test + "mary"
test + list("mary")
test <- list("mary")
test
test[[2]] <- "bob"
test
test <- list()
test
test[[1]] <- "mary"
test
test[[2]] <- "bob"
test
test <- list()
test[[2]] <- "mary"
test
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k <- 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- list()
for (i in 1:n_files) {
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#set.seed(1234)
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
dat[[i] <- as.vector(t(bof$centers))
img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
n_files <- length(list.files(img_dir))
k <- 10
#test <- load(paste0("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/","pet11.jpg.sift.Rdata"))
dat <- list()
for (i in 1:n_files) {
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#set.seed(1234)
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat"
dat[[i]] <- as.vector(t(bof$centers))
}
str(dat)
?is.na.data.frame()
is.na(dat)
anyNA(dat)
?kmeans
dat1 <- do.call(rbind, dat)
str(dat1)
class(dat1)
head.matrix(dat1)
dim(dat1)
class(dat1)
View(dat1)
dat1[1:5,1:10]
dat[[1]][1:10]
dat[[5]][1:10]
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
feature_SIFT <- function(img_dir, set_name, data_name = "pets", export=T, k = 10) {
n_files <- length(list.files(img_dir))
dat <- list()
for (i in 1:n_files) {
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#set.seed(1234)
# kmeans considers the matrix of keypoint descriptors for each image to be
# n=number of key points observations in 128-dimensional space. kmeans
# summarized those n=number of key points observations into 10 means each a
# location in 128-dim space.
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat" list
dat[[i]] <- as.vector(t(bof$centers))
# could take some time checking to NA values within the vectors of the list "dat", because I got 3 "did not converge in 10 iterations" warnings. But that is too much for now.
}
# combined the list elements into rows of a single matrix.
# Code came from https://stackoverflow.com/questions/1329940/how-do-i-make-a-matrix-from-a-list-of-vectors-in-r
dat <- do.call(rbind, dat)
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
#####################################################
####Improvements?
# Look into the "bag of words" process for selecting keypoints per image
# different approach to selecting features: create function that selects 5
# random keypoint descriptor sets and concatenates them sequentially into
# a single row. In which case one of the inputs would be: nkeypoints =
# number of key points per image to deliver to output. default = 5
###########################
feature_SIFT <- function(img_dir, set_name = "", data_name = "pets", export=T, k = 10) {
n_files <- length(list.files(img_dir))
dat <- list()
for (i in 1:n_files) {
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#set.seed(1234)
# kmeans considers the matrix of keypoint descriptors for each image to be
# n=number of key points observations in 128-dimensional space. kmeans
# summarized those n=number of key points observations into 10 means each a
# location in 128-dim space.
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat" list
dat[[i]] <- as.vector(t(bof$centers))
# could take some time checking to NA values within the vectors of the list "dat", because I got 3 "did not converge in 10 iterations" warnings. But that is too much for now.
}
# combined the list elements into rows of a single matrix.
# Code came from https://stackoverflow.com/questions/1329940/how-do-i-make-a-matrix-from-a-list-of-vectors-in-r
dat <- do.call(rbind, dat)
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
#####################################################
####Improvements?
# Look into the "bag of words" process for selecting keypoints per image
# different approach to selecting features: create function that selects 5
# random keypoint descriptor sets and concatenates them sequentially into
# a single row. In which case one of the inputs would be: nkeypoints =
# number of key points per image to deliver to output. default = 5
###########################
feature_SIFT("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
dim(dat)
str(dat)
class(dat)
feature_SIFT <- function(img_dir, set_name = "", data_name = "pets", export=T, k = 10) {
n_files <- length(list.files(img_dir))
dat <- list()
for (i in 1:n_files) {
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#set.seed(1234)
# kmeans considers the matrix of keypoint descriptors for each image to be
# n=number of key points observations in 128-dimensional space. kmeans
# summarized those n=number of key points observations into 10 means each a
# location in 128-dim space.
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat" list
dat[[i]] <- as.vector(t(bof$centers))
# could take some time checking to NA values within the vectors of the list "dat", because I got 3 "did not converge in 10 iterations" warnings. But that is too much for now.
}
# combined the list elements into rows of a single matrix.
# Code came from https://stackoverflow.com/questions/1329940/how-do-i-make-a-matrix-from-a-list-of-vectors-in-r
dat <- do.call(rbind, dat)
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
feature_SIFT("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
class(dat)
dat <- do.call(rbind, dat)
class(dat)
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#### Inputs:
# "img_dir"
# "set_name" = default = ""
# "data_name" =       default ="pets"
# "export" =     default = TRUE
# "k" = number of centers to claculate with kmeans over the keypoints in each
#image. default = 10
#### Outputs:
# "dat" = an .RData file of SIFT features for all images in input directory.
# nrow = number of images in input directory. ncol = *****???
#img_dir <-  "/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/"
feature_SIFT <- function(img_dir, set_name = "", data_name = "pets", export=T, k = 10) {
n_files <- length(list.files(img_dir))
dat <- list()
for (i in 1:n_files) {
load(paste(img_dir, 'pet', i, '.jpg.sift.Rdata', sep = ''))
#set.seed(1234)
# kmeans considers the matrix of keypoint descriptors for each image to be
# n=number of key points observations in 128-dimensional space. kmeans
# summarized those n=number of key points observations into 10 means each a
# location in 128-dim space.
bof <- kmeans(features, k)
# sequentially concatonated the 10 length =128 centers for the ith image;
#assigned to the ith element of "dat" list
dat[[i]] <- as.vector(t(bof$centers))
# could take some time checking to NA values within the vectors of the list "dat", because I got 3 "did not converge in 10 iterations" warnings. But that is too much for now.
}
# combined the list elements into rows of a single matrix.
#dat <- do.call(rbind, dat)
dat <- t(simplify2array(dat))
### output constructed features
if(export){
save(dat, file = paste0("../output/feature_SIFT_", data_name, "_", set_name, ".RData"))
}
#output "dat" as matrix
return(dat)
}
#####################################################
####Improvements?
# Look into the "bag of words" process for selecting keypoints per image
# different approach to selecting features: create function that selects 5
# random keypoint descriptor sets and concatenates them sequentially into
# a single row. In which case one of the inputs would be: nkeypoints =
# number of key points per image to deliver to output. default = 5
###########################
feature_SIFT("/Users/admin/Desktop/Columbia/Spring 2018/Applied DS/Pet Images and Extracted Features - Project 2/Practice SIFT Set 500/")
class(dat)
dat[1:5,1:8]
